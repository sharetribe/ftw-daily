// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`StripePayoutPage matches snapshot with Stripe connected 1`] = `
<Page
  scrollingDisabled={false}
  title="StripePayoutPage.title"
>
  <LayoutSideNavigation
    className={null}
    containerClassName={null}
    rootClassName={null}
  >
    <LayoutWrapperTopbar
      className={null}
      rootClassName={null}
    >
      <withRouter(Connect(TopbarContainerComponent))
        currentPage="StripePayoutPage"
        desktopClassName="desktopTopbar"
        mobileClassName="mobileTopbar"
      />
      <UserNav
        className={null}
        rootClassName={null}
        selectedPageName="StripePayoutPage"
      />
    </LayoutWrapperTopbar>
    <withViewport(LayoutWrapperAccountSettingsSideNavComponent)
      currentTab="StripePayoutPage"
    />
    <LayoutWrapperMain
      className={null}
      rootClassName={null}
    >
      <div
        className="content"
      >
        <h1
          className="title"
        >
          <MemoizedFormattedMessage
            id="StripePayoutPage.heading"
          />
        </h1>
        <injectIntl(StripeConnectAccountFormComponent)
          currentUser={
            Object {
              "attributes": Object {
                "banned": false,
                "deleted": false,
                "email": "stripe-connected@example.com",
                "emailVerified": true,
                "profile": Object {
                  "abbreviatedName": "stripe-connected abbreviated name",
                  "displayName": "stripe-connected display name",
                  "firstName": "stripe-connected first name",
                  "lastName": "stripe-connected last name",
                },
              },
              "id": UUID {
                "_sdkType": "UUID",
                "uuid": "stripe-connected",
              },
              "profileImage": Object {},
              "stripeAccount": Object {
                "attributes": Object {
                  "stripeAccountId": "acc_testiaccountid",
                },
                "id": UUID {
                  "_sdkType": "UUID",
                  "uuid": undefined,
                },
                "type": "stripeAccount",
              },
              "type": "currentUser",
            }
          }
          disabled={false}
          inProgress={false}
          onChange={[Function]}
          onGetStripeConnectAccountLink={[Function]}
          onSubmit={[Function]}
          ready={false}
          savedCountry={null}
          stripeAccountError={null}
          stripeAccountFetched={false}
          stripeAccountLinkError={null}
          stripeBankAccountLastDigits={null}
          stripeConnected={false}
          submitButtonText="StripePayoutPage.submitButtonText"
        />
      </div>
    </LayoutWrapperMain>
    <LayoutWrapperFooter
      className={null}
      rootClassName={null}
    >
      <injectIntl(Footer) />
    </LayoutWrapperFooter>
  </LayoutSideNavigation>
</Page>
`;

exports[`StripePayoutPage matches snapshot with Stripe not connected 1`] = `
<Page
  scrollingDisabled={false}
  title="StripePayoutPage.title"
>
  <LayoutSideNavigation
    className={null}
    containerClassName={null}
    rootClassName={null}
  >
    <LayoutWrapperTopbar
      className={null}
      rootClassName={null}
    >
      <withRouter(Connect(TopbarContainerComponent))
        currentPage="StripePayoutPage"
        desktopClassName="desktopTopbar"
        mobileClassName="mobileTopbar"
      />
      <UserNav
        className={null}
        rootClassName={null}
        selectedPageName="StripePayoutPage"
      />
    </LayoutWrapperTopbar>
    <withViewport(LayoutWrapperAccountSettingsSideNavComponent)
      currentTab="StripePayoutPage"
    />
    <LayoutWrapperMain
      className={null}
      rootClassName={null}
    >
      <div
        className="content"
      >
        <h1
          className="title"
        >
          <MemoizedFormattedMessage
            id="StripePayoutPage.heading"
          />
        </h1>
        <injectIntl(StripeConnectAccountFormComponent)
          currentUser={
            Object {
              "attributes": Object {
                "banned": false,
                "deleted": false,
                "email": "stripe-not-connected@example.com",
                "emailVerified": true,
                "profile": Object {
                  "abbreviatedName": "stripe-not-connected abbreviated name",
                  "displayName": "stripe-not-connected display name",
                  "firstName": "stripe-not-connected first name",
                  "lastName": "stripe-not-connected last name",
                },
              },
              "id": UUID {
                "_sdkType": "UUID",
                "uuid": "stripe-not-connected",
              },
              "profileImage": Object {},
              "type": "currentUser",
            }
          }
          disabled={false}
          inProgress={false}
          onChange={[Function]}
          onGetStripeConnectAccountLink={[Function]}
          onSubmit={[Function]}
          ready={false}
          savedCountry={null}
          stripeAccountError={null}
          stripeAccountFetched={false}
          stripeAccountLinkError={null}
          stripeBankAccountLastDigits={null}
          stripeConnected={false}
          submitButtonText="StripePayoutPage.submitButtonText"
        />
      </div>
    </LayoutWrapperMain>
    <LayoutWrapperFooter
      className={null}
      rootClassName={null}
    >
      <injectIntl(Footer) />
    </LayoutWrapperFooter>
  </LayoutSideNavigation>
</Page>
`;

exports[`StripePayoutPage matches snapshot with details submitted 1`] = `
<Page
  scrollingDisabled={false}
  title="StripePayoutPage.title"
>
  <LayoutSideNavigation
    className={null}
    containerClassName={null}
    rootClassName={null}
  >
    <LayoutWrapperTopbar
      className={null}
      rootClassName={null}
    >
      <withRouter(Connect(TopbarContainerComponent))
        currentPage="StripePayoutPage"
        desktopClassName="desktopTopbar"
        mobileClassName="mobileTopbar"
      />
      <UserNav
        className={null}
        rootClassName={null}
        selectedPageName="StripePayoutPage"
      />
    </LayoutWrapperTopbar>
    <withViewport(LayoutWrapperAccountSettingsSideNavComponent)
      currentTab="StripePayoutPage"
    />
    <LayoutWrapperMain
      className={null}
      rootClassName={null}
    >
      <div
        className="content"
      >
        <h1
          className="title"
        >
          <MemoizedFormattedMessage
            id="StripePayoutPage.heading"
          />
        </h1>
        <injectIntl(StripeConnectAccountFormComponent)
          currentUser={
            Object {
              "attributes": Object {
                "banned": false,
                "deleted": false,
                "email": "stripe-connected@example.com",
                "emailVerified": true,
                "profile": Object {
                  "abbreviatedName": "stripe-connected abbreviated name",
                  "displayName": "stripe-connected display name",
                  "firstName": "stripe-connected first name",
                  "lastName": "stripe-connected last name",
                },
              },
              "id": UUID {
                "_sdkType": "UUID",
                "uuid": "stripe-connected",
              },
              "profileImage": Object {},
              "stripeAccount": Object {
                "attributes": Object {
                  "stripeAccountId": "acc_testiaccountid",
                },
                "id": UUID {
                  "_sdkType": "UUID",
                  "uuid": undefined,
                },
                "type": "stripeAccount",
              },
              "type": "currentUser",
            }
          }
          disabled={false}
          inProgress={false}
          onChange={[Function]}
          onGetStripeConnectAccountLink={[Function]}
          onSubmit={[Function]}
          ready={true}
          savedCountry={null}
          stripeAccountError={null}
          stripeAccountFetched={false}
          stripeAccountLinkError={null}
          stripeBankAccountLastDigits={null}
          stripeConnected={false}
          submitButtonText="StripePayoutPage.submitButtonText"
        />
      </div>
    </LayoutWrapperMain>
    <LayoutWrapperFooter
      className={null}
      rootClassName={null}
    >
      <injectIntl(Footer) />
    </LayoutWrapperFooter>
  </LayoutSideNavigation>
</Page>
`;
